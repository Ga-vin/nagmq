{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"NagMQ","body":"NagMQ is an event broker that exposes the internal state and events of\r\nNagios to endpoings on a ZeroMQ message bus.\r\n\r\nNagios objects and events are available as JSON. The broker exposes three\r\nsockets, all of which are optional:\r\n\r\n- Publisher - Publishes events coming out of the event broker in real-time\r\n\r\n- Pull - Receives passive checks and commands, like the Nagios command pipe\r\n\r\n- Request - Sends state data on demand to clients\r\n\r\nThere is a distributed DNX-style executor (mqexec) designed to have as many\r\nworkers (possibly at the edge as an NRPE-replacement) and job brokers as you\r\nwant. It can also submit its results to more than one Nagios instance. Each\r\nworker can filter what checks it runs based on any field in the service/host\r\ncheck and event handler initiate messages from the publisher.\r\n\r\nIt also comes with sample scripts written in Python to provide replacements\r\nfor nsca, nrpe, and a handy CLI which talk to the bus instead of status.dat.\r\n\r\nNagMQ is licensed under the `Apache Version 2 license`_; see LICENSE in\r\nthe source distribution for details.\r\n\r\nVisit https://groups.google.com/d/forum/nagmq for questions and announcements.\r\n\r\nCompilation and Installation\r\n----------------------------\r\n\r\nCompile this from the Git repo by running::\r\n\r\n\t$ autoreconf -i\r\n\t$ ./configure\r\n\t$ make\r\n\t$ make install\r\n\r\nAdd the path to the installed broker to your nagios.cfg with the path to the\r\nNagMQ config file as the broker parameter::\r\n\r\n\t# EVENT BROKER MODULE(S)\r\n\t...\r\n\tbroker_module=/usr/local/lib/nagmq/nagmq.so /etc/nagios/nagmq.config\r\n\t#broker_module=/somewhere/module1.o\r\n\t#broker_module=/somewhere/module2.o arg1 arg2=3 debug=0\r\n\r\nThe NagMQ config file should be a JSON file that tells what message busses\r\nthe broker should connect/bind to. Each endpoint can connect and or bind\r\nto any number of addresses - if you want to connect or bind to more than\r\none address, list them as an array.::\r\n\r\n\t{\r\n\t\t\"publish\": {\r\n\t\t\t\"bind\": \"ipc:///var/nagios/nagmqevents.sock\",\r\n\t\t\t\"override\": [ \"service_check_initiate\", \"host_check_initiate\" ]\r\n\t\t},  \r\n\t\t\"pull\": {\r\n\t\t\t\"bind\": [ \"ipc:///var/nagios/nagmqcommands.sock\", \"tcp://*:5556\" ],\r\n\t\t\t\"tcpacceptfilters\": [ \"localhost\", \"failoverhost\" ]\r\n\t\t},  \r\n\t\t\"reply\": {\r\n\t\t\t\"bind\": [ \"ipc:///var/nagios/nagmqstate.sock\", \"tcp://*:5557\" ],\r\n\t\t\t\"tcpacceptfilters\": [ \"localhost\", \"failoverhost\" ]\r\n\t\t},  \r\n   \t\t\"executor\": {\r\n    \t\t\t\"filter\": { \r\n    \t\t\t\t\"match\": \"localhost\",\r\n    \t\t\t\t\"field\": \"host_name\"},\r\n\t\t\t\"jobs\": \"ipc:///var/nagios/mqexecjobs.sock\",\r\n\t\t\t\"results\": \"ipc:///var/nagios/mqexecresults.sock\"\r\n\t\t},  \r\n\t\t\"cli\": {\r\n\t\t\t\"pull\": \"tcp://localhost:5556\",\r\n\t\t\t\"reply\": \"tcp://localhost:5557\"\r\n\t\t},  \r\n\t\t\"devices\": [\r\n\t\t\t[ { \"backend\": { \"type\": \"push\", \"bind\":\"tcp://*:5558\", \"noblock\":true,\r\n\t\t\t\t\"tcpacceptfilters\": [ \"localhost\", \"failoverhost\" ] },\r\n\t\t\t\t\"frontend\": { \"type\": \"sub\", \"connect\":\"ipc:///var/nagios/nagmqevents.sock\",\r\n\t\t\t\t\t\"subscribe\": [ \"service_check_initiate\", \"host_check_initiate\" ] } },\r\n\t\t\t{ \"backend\": { \"type\": \"pull\", \"connect\":\"tcp://masterhost:5558\" },\r\n\t\t\t\t\"frontend\": { \"type\":\"push\", \"bind\": \"ipc:///var/nagios/mqexecjobs.sock\" } },\r\n\t\t\t{ \"backend\": { \"type\": \"push\", \"connect\":\"tcp://masterhost:5556\" },\r\n\t\t\t\t\"frontend\": { \"type\":\"pull\", \"bind\": \"ipc:///var/nagios/mqexecresults.sock\" } } ]\r\n\t\t]   \r\n\t}\r\n\r\n\r\nStart the dnxmq broker and worker:\r\n\r\n    $ mqbroker /etc/nagios/nagmq.config\r\n    $ mqexec /etc/nagios/nagmq.config\r\n\r\nRestart Nagios, and you'll be able to connect to the message busses and\r\nget data into and out of the broker!\r\n\r\nIf you do NOT wish to use dnxmq, remove the \"override\" directive from the\r\nsample \"publisher\" config.\r\n\r\n.. _`Apache Version 2 license`: http://www.apache.org/licenses/LICENSE-2.0.html\r\n","tagline":"Messaging API for Nagios over ZeroMQ","google":"UA-37988134-1"}